name: tests

on:
  push:
  workflow_dispatch:

env:
  CONFIG_FILE: build/config/suite.yaml

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      config: ${{ steps.get-config.outputs.config }}
    steps:
      - name: config
        id: get-config
        run: |
          cat /etc/resolv.conf
          echo config='{"distro":["debian"], "suite": ["swoole"], "version": ["8.3.16"]}' >> $GITHUB_OUTPUT
#      - name: Check out repository code
#        uses: actions/checkout@v3
#      - name: Set yq
#        uses: mikefarah/yq@master
#        with:
#          cmd: ''
#      - name: get config
#        id: get-config
#        run: |
#            set -eux;
#            ver=$(yq 'keys() | filter(.!= "default") |.[]' "$CONFIG_FILE")
#            ver="8.3"
#            version='[]'
#            while IFS= read -r line; do
#              item=$(curl -sfSL "https://www.php.net/releases/?json&max=1&version=$line" | yq -pj -oy 'keys | .[]')
#              version=$(printf "%s" "$version" | item=$item yq '. *+ [env(item)] | @json')
#            done <<< "$ver"
#
#            export version
#
#            config=$(yq '. = {"distro": ["debian", "alpine"], "suite": (.default | keys()), "version": env(version)} | @json' "$CONFIG_FILE")
#
#            echo config=$config >> $GITHUB_OUTPUT

  tests:
    needs: init
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.init.outputs.config)}}

    steps:
      - name: print config
        run: |
          echo "distro: ${{ matrix.distro }}"
          echo "suite: ${{ matrix.suite }}"
          echo "version: ${{ matrix.version }}"

#      - name: Call Reusable Workflow for Docker Login
#        uses: ./.github/workflows/docker-login.yml
#        secrets: inherit

      - name: Check Docker Login Status
        run: docker info